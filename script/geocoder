#!/usr/bin/env ruby

require File.expand_path("../config/environment", File.dirname(__FILE__))
lock_path = '/tmp/geocoding.lock'

# PATCH - make Lockfile gem work in ruby 1.9
require 'lockfile'
class Lockfile
    alias_method :old_load_lock_id, :load_lock_id
    def load_lock_id buf
      def buf.each(&block)
        self.split($/).each(&block)
      end
      old_load_lock_id buf
    end
end

Lockfile.new lock_path, :retries => 0 do
  Service.all.each do |service|
    service.data_sets.each do |set|
      if ENV['RESET_ERRORS']
        set.places.with_geocoding_errors.map { |p| p.geocode_error = nil }
        set.save
      end
      set.places.needs_geocoding.each do |place|
        begin
          place.geocode!
          $stderr.puts place.geocode_error if place.geocode_error
        # Rescuing all exceptions like this is a bad idea, but
        # doing otherwise involves delving into the network code
        # lying behind place.geocode!
        # We should revisit that and error reporting from this script
        # in general.
        rescue => e
          $stderr.puts e.message
          place.update_attribute(:geocode_error, e.message)
        end
      end
    end
  end
end
